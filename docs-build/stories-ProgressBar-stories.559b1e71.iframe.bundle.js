/*! For license information please see stories-ProgressBar-stories.559b1e71.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkreact_webpack_project=self.webpackChunkreact_webpack_project||[]).push([[480],{"./src/stories/ProgressBar.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ApiCallUpdatesProgressBar:()=>ApiCallUpdatesProgressBar,ContinouseProgress:()=>ContinouseProgress,Progressbar:()=>Progressbar,ProgressbarSuccess:()=>ProgressbarSuccess,ProgressbarWarning:()=>ProgressbarWarning,__namedExportsOrder:()=>__namedExportsOrder,default:()=>ProgressBar_stories});var react=__webpack_require__("./node_modules/react/index.js"),injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),progressBar=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./node_modules/sass-loader/dist/cjs.js!./src/components/Progressbar/progressBar.scss"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(progressBar.Z,options);const Progressbar_progressBar=progressBar.Z&&progressBar.Z.locals?progressBar.Z.locals:void 0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const configsForHeight={small:"2px",medium:"4px",large:"6px"};function progressBar_ProgressBar(props){const{label="",labelColor="black",min=0,max=1,value=0,color="blue",shape="round",size="medium"}=props,progressBarWidth=(value-min)/(max-min)*100,height=configsForHeight[size];return progressBarWidth>100?(0,jsx_runtime.jsx)("div",{children:"Please provide correct min, max and value as per documentation"}):(0,jsx_runtime.jsxs)("div",{className:Progressbar_progressBar.progressBarContainer,style:{color},children:[(0,jsx_runtime.jsx)("div",{className:`${Progressbar_progressBar.progressBar} ${"round"===shape?Progressbar_progressBar.round:Progressbar_progressBar.square}`,children:(0,jsx_runtime.jsx)("div",{className:`${Progressbar_progressBar.progressBarBar} ${progressBarWidth&&Progressbar_progressBar.animationStart}`,style:{width:`${progressBarWidth}%`,backgroundColor:color,height}})}),label&&(0,jsx_runtime.jsx)("div",{className:Progressbar_progressBar.progressBarLabel,style:{color:labelColor},children:label})]})}progressBar_ProgressBar.displayName="ProgressBar";try{progressBar_ProgressBar.displayName="ProgressBar",progressBar_ProgressBar.__docgenInfo={description:"",displayName:"ProgressBar",props:{label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"string"}},labelColor:{defaultValue:null,description:"",name:"labelColor",required:!1,type:{name:"string"}},min:{defaultValue:null,description:"",name:"min",required:!1,type:{name:"number"}},max:{defaultValue:null,description:"",name:"max",required:!1,type:{name:"number"}},value:{defaultValue:null,description:"",name:"value",required:!0,type:{name:"number"}},color:{defaultValue:null,description:"",name:"color",required:!1,type:{name:"string"}},shape:{defaultValue:null,description:"",name:"shape",required:!1,type:{name:"enum",value:[{value:'"square"'},{value:'"round"'}]}},size:{defaultValue:null,description:"",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"medium"'},{value:'"large"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Progressbar/progressBar.tsx#ProgressBar"]={docgenInfo:progressBar_ProgressBar.__docgenInfo,name:"ProgressBar",path:"src/components/Progressbar/progressBar.tsx#ProgressBar"})}catch(__react_docgen_typescript_loader_error){}try{ProgressBar.displayName="ProgressBar",ProgressBar.__docgenInfo={description:"",displayName:"ProgressBar",props:{label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"string"}},labelColor:{defaultValue:null,description:"",name:"labelColor",required:!1,type:{name:"string"}},min:{defaultValue:null,description:"",name:"min",required:!1,type:{name:"number"}},max:{defaultValue:null,description:"",name:"max",required:!1,type:{name:"number"}},value:{defaultValue:null,description:"",name:"value",required:!0,type:{name:"number"}},color:{defaultValue:null,description:"",name:"color",required:!1,type:{name:"string"}},shape:{defaultValue:null,description:"",name:"shape",required:!1,type:{name:"enum",value:[{value:'"square"'},{value:'"round"'}]}},size:{defaultValue:null,description:"",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"medium"'},{value:'"large"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Progressbar/index.tsx#ProgressBar"]={docgenInfo:ProgressBar.__docgenInfo,name:"ProgressBar",path:"src/components/Progressbar/index.tsx#ProgressBar"})}catch(__react_docgen_typescript_loader_error){}const ProgressBar_stories={title:"Components/ProgressBar",component:progressBar_ProgressBar,parameters:{layout:"padded"},tags:["autodocs"],argTypes:{}},Progressbar={args:{value:.5,label:"Default ProgressBar"}},ProgressbarWarning={args:{min:0,max:5,value:2,label:"Warning ProgressBar",labelColor:"red",color:"red"}},ProgressbarSuccess={args:{value:.8,label:"Success ProgressBar",labelColor:"green",color:"green"}},template=()=>{const[value,setValue]=react.useState(0);return react.useEffect((()=>{const id=setInterval((()=>{setValue(value<42?1+value:0)}),100);return()=>{clearInterval(id)}})),(0,jsx_runtime.jsx)(progressBar_ProgressBar,{max:42,value,label:`There have been ${value} files downloaded`})};template.displayName="template";const ContinouseProgress=template.bind({});ContinouseProgress.parameters={docs:{source:{code:'\nimport * as React from "react";\nimport { ProgressBar } from \'../components/Progressbar\';\n\nconst intervalDelay = 100;\nconst intervalIncrement = 1;\n\nexport const Max = () => {\n  const [value, setValue] = React.useState(0);\n\n  React.useEffect(() => {\n    const id = setInterval(() => {\n      setValue(value < 42 ? intervalIncrement + value : 0);\n    }, intervalDelay);\n    return () => {\n      clearInterval(id);\n    };\n  });\n  return (<ProgressBar max={42} value={value} label={"There have been ${value} files downloaded"}/>);\n};\n'}}};const states_idle="idle",states_loading="loading",states_completed="completed";let loading=0;function template2(){const currentState=react.useRef(null),[value,setValue]=react.useState(0),startLoading=()=>{switch(0===loading?currentState.current=states_idle:loading>0&&(currentState.current=states_loading),currentState.current){case states_completed:currentState.current=states_idle,loading=0,setValue(0);case states_idle:case states_loading:currentState.current=states_loading,setValue(.75)}loading++},endLoading=()=>{switch(loading=Math.max(loading-1,0),0===loading?currentState.current=states_completed:loading>0&&(currentState.current=states_loading),currentState.current){case states_completed:setValue(1);break;case states_loading:setValue(.75)}};return react.useEffect((()=>{const timer=setTimeout((()=>{startLoading();const apiTimer1=setTimeout((()=>{endLoading(),console.log("2 second timer"),clearTimeout(timer),clearTimeout(apiTimer1),startLoading();const apiTimer2=setTimeout((()=>{endLoading(),console.log("3 second timer"),clearTimeout(timer),clearTimeout(apiTimer2)}),3e3)}),2e3);setTimeout((()=>{startLoading();const apiTimer3=setTimeout((()=>{endLoading(),console.log("1 second timer"),clearTimeout(timer),clearTimeout(apiTimer3)}),1e3);startLoading();const apiTimer4=setTimeout((()=>{endLoading(),console.log("2 second timer"),clearTimeout(timer),clearTimeout(apiTimer4)}),2e3)}),500)}),100)}),[]),(0,jsx_runtime.jsx)(progressBar_ProgressBar,{value,label:"Api calls progress bar"})}template2.displayName="template2";const ApiCallUpdatesProgressBar=template2.bind({});ApiCallUpdatesProgressBar.parameters={docs:{source:{code:'\nimport React, { useEffect, useReducer, useRef, useState } from "react";\nimport { ProgressBar } from "./components/Progressbar";\n\n// slider states => idle => 0%, loading => 95%, completed => 100%\n// when any api call happens change states\n// setLoading => this will modify the loading counts and modify value of progress bar based on states,\n// endLoading => modify => states based on current loading counts and modify the value\n\nconst states = {\n  idle: \'idle\',\n  loading: \'loading\',\n  completed: \'completed\'\n}\nlet loading = 0;\nfunction App() {\n  const currentState = useRef(null); \n  const [value, setValue] = useState(0);\n\n  const startLoading = () => {\n    if (loading === 0) {\n      currentState.current = states.idle\n    } else if (loading > 0) {\n      currentState.current = states.loading;\n    }\n\n    switch (currentState.current) {\n      case states.completed:\n        currentState.current = states.idle;\n        loading = 0;\n        setValue(0);\n      case states.idle:\n        currentState.current = states.loading;\n        setValue(0.75);\n        break;\n      case states.loading:\n        currentState.current = states.loading;\n        setValue(0.75);\n        break;\n    }\n    loading++;\n  }\n\n  const endLoading = () => {\n    loading = Math.max(loading - 1, 0);\n    if (loading === 0) {\n      currentState.current = states.completed\n    } else if (loading > 0) {\n      currentState.current = states.loading;\n    }\n\n    switch (currentState.current) {\n      case states.completed:\n        setValue(1);\n        break;\n      case states.loading:\n        setValue(0.75);\n        break;\n    }\n  }\n\n  // Replicate API call using set timeout, with multiple overlaping calls example\n  React.useEffect(() => {\n    const timer = setTimeout(() => {\n      startLoading();\n      const apiTimer1 = setTimeout(() => {\n        endLoading();\n        console.log("2 second timer");\n        clearTimeout(timer);\n        clearTimeout(apiTimer1);\n\n        startLoading();\n        const apiTimer2 = setTimeout(() => {\n          endLoading();\n          console.log("3 second timer");\n          clearTimeout(timer);\n          clearTimeout(apiTimer2);\n        }, 3000);\n\n      }, 2000);\n\n      setTimeout(() =>{\n        startLoading();\n        const apiTimer3 = setTimeout(() => {\n          endLoading();\n          console.log("1 second timer");\n          clearTimeout(timer);\n          clearTimeout(apiTimer3);\n        }, 1000);\n\n        startLoading();\n        const apiTimer4 = setTimeout(() => {\n          endLoading();\n          console.log("2 second timer");\n          clearTimeout(timer);\n          clearTimeout(apiTimer4);\n        }, 2000);\n      }, 500)\n\n    }, 100);\n  }, []);\n\n\n  return (\n    <ProgressBar value={value} label="Api calls progress bar" />\n  );\n}\n\n'}}},Progressbar.parameters={...Progressbar.parameters,docs:{...Progressbar.parameters?.docs,source:{originalSource:'{\n  args: {\n    value: 0.5,\n    label: "Default ProgressBar"\n  }\n}',...Progressbar.parameters?.docs?.source}}},ProgressbarWarning.parameters={...ProgressbarWarning.parameters,docs:{...ProgressbarWarning.parameters?.docs,source:{originalSource:'{\n  args: {\n    min: 0,\n    max: 5,\n    value: 2,\n    label: "Warning ProgressBar",\n    labelColor: "red",\n    color: "red"\n  }\n}',...ProgressbarWarning.parameters?.docs?.source}}},ProgressbarSuccess.parameters={...ProgressbarSuccess.parameters,docs:{...ProgressbarSuccess.parameters?.docs,source:{originalSource:'{\n  args: {\n    value: 0.8,\n    label: "Success ProgressBar",\n    labelColor: "green",\n    color: "green"\n  }\n}',...ProgressbarSuccess.parameters?.docs?.source}}},ContinouseProgress.parameters={...ContinouseProgress.parameters,docs:{...ContinouseProgress.parameters?.docs,source:{originalSource:"() => {\n  const [value, setValue] = React.useState(0);\n  React.useEffect(() => {\n    const id = setInterval(() => {\n      setValue(value < 42 ? intervalIncrement + value : 0);\n    }, intervalDelay);\n    return () => {\n      clearInterval(id);\n    };\n  });\n  return <ProgressBar max={42} value={value} label={`There have been ${value} files downloaded`} />;\n}",...ContinouseProgress.parameters?.docs?.source}}};const __namedExportsOrder=["Progressbar","ProgressbarWarning","ProgressbarSuccess","ContinouseProgress","ApiCallUpdatesProgressBar"]},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./node_modules/sass-loader/dist/cjs.js!./src/components/Progressbar/progressBar.scss":(module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/sourceMaps.js"),_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,".progressBar__progressBarContainer--i0wox .progressBar__progressBar--goK60{background-color:#ddd}.progressBar__progressBarContainer--i0wox .progressBar__progressBar--goK60.progressBar__round--eK7XU{border-radius:6px}.progressBar__progressBarContainer--i0wox .progressBar__progressBar--goK60.progressBar__square--oCDb9{border-radius:0}.progressBar__progressBarContainer--i0wox .progressBar__progressBar--goK60 .progressBar__progressBarBar--vXOgx{width:0%;height:4px;background-color:blue;border-radius:inherit}.progressBar__progressBarContainer--i0wox .progressBar__progressBar--goK60 .progressBar__progressBarBar--vXOgx.progressBar__animationStart--L9La6{transition:.3s width ease}.progressBar__progressBarContainer--i0wox .progressBar__progressBarLabel--dmxmy{display:block}","",{version:3,sources:["webpack://./src/components/Progressbar/progressBar.scss"],names:[],mappings:"AACE,2EACE,qBAAA,CAEA,qGACE,iBAAA,CAGF,sGACE,eAAA,CAGF,+GACE,QAAA,CACA,UAAA,CACA,qBAAA,CACA,qBAAA,CAEA,kJACE,yBAAA,CAKN,gFACE,aAAA",sourcesContent:[".progressBarContainer {\n  .progressBar {\n    background-color: #ddd;\n\n    &.round {\n      border-radius: 6px;\n    }\n\n    &.square {\n      border-radius: 0;\n    }\n\n    .progressBarBar {\n      width: 0%;\n      height: 4px;\n      background-color: blue;\n      border-radius: inherit;\n\n      &.animationStart {\n        transition: 0.3s width ease;\n      }\n    }\n  }\n\n  .progressBarLabel {\n    display: block;\n  }\n}"],sourceRoot:""}]),___CSS_LOADER_EXPORT___.locals={progressBarContainer:"progressBar__progressBarContainer--i0wox",progressBar:"progressBar__progressBar--goK60",round:"progressBar__round--eK7XU",square:"progressBar__square--oCDb9",progressBarBar:"progressBar__progressBarBar--vXOgx",animationStart:"progressBar__animationStart--L9La6",progressBarLabel:"progressBar__progressBarLabel--dmxmy"};const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./node_modules/react/cjs/react-jsx-runtime.production.min.js":(__unused_webpack_module,exports,__webpack_require__)=>{var f=__webpack_require__("./node_modules/react/index.js"),k=Symbol.for("react.element"),l=Symbol.for("react.fragment"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};function q(c,a,g){var b,d={},e=null,h=null;for(b in void 0!==g&&(e=""+g),void 0!==a.key&&(e=""+a.key),void 0!==a.ref&&(h=a.ref),a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l,exports.jsx=q,exports.jsxs=q},"./node_modules/react/jsx-runtime.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/react/cjs/react-jsx-runtime.production.min.js")}}]);