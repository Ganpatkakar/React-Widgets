"use strict";(self.webpackChunkreact_webpack_project=self.webpackChunkreact_webpack_project||[]).push([[276],{"./src/stories/DataTableTwo.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{InfiniteLoadTableList:()=>InfiniteLoadTableList,TableList:()=>TableList,__namedExportsOrder:()=>__namedExportsOrder,default:()=>DataTableTwo_stories});var react=__webpack_require__("./node_modules/react/index.js"),index_esm=__webpack_require__("./node_modules/react-icons/ci/index.esm.js"),io_index_esm=__webpack_require__("./node_modules/react-icons/io/index.esm.js"),io5_index_esm=__webpack_require__("./node_modules/react-icons/io5/index.esm.js"),cg_index_esm=__webpack_require__("./node_modules/react-icons/cg/index.esm.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const TableContext=react.createContext(null),TableDispatchContext=react.createContext(null),ActionTypes_UpdateTableRowSelection="UpdateTableRowSelection",ActionTypes_UpdateTableHeaderSelection="UpdateTableHeaderSelection",ActionTypes_TableHeaderSortingClick="TableHeaderSortingClick",ActionTypes_UpdateTableRowIdSet="UpdateTableRowIdSet",TableProvider=props=>{const{selectedRows,selectionEnabled,isMultiSelectEnabled,sortingEnabled}=props,[state,dispatchState]=(0,react.useReducer)(tableReducer,{selectedRows,selectionEnabled,isMultiSelectEnabled,tableRowIds:new Set(""),sortingEnabled,isHeaderSelected:!1});return(0,jsx_runtime.jsx)(TableContext.Provider,{value:state,children:(0,jsx_runtime.jsx)(TableDispatchContext.Provider,{value:dispatchState,children:props.children})})};function tableReducer(state,_ref){let{type,payload}=_ref;if(type===ActionTypes_UpdateTableRowSelection){console.log("table row selection cliked");const{selectedRows}=state;return selectedRows.has(payload)?selectedRows.delete(payload):selectedRows.add(payload),{...state,selectedRows}}if(type===ActionTypes_UpdateTableHeaderSelection){let{isHeaderSelected,selectedRows,tableRowIds}=state;return isHeaderSelected=!isHeaderSelected,isHeaderSelected?selectedRows=new Set([...tableRowIds]):selectedRows.clear(),{...state,isHeaderSelected,selectedRows}}if(type===ActionTypes_TableHeaderSortingClick)return console.log("table header sorting cliked"),{...state};if(type===ActionTypes_UpdateTableRowIdSet){const{tableRowIds}=state;return tableRowIds.add(payload),{...state,tableRowIds}}}TableProvider.displayName="TableProvider";try{TableProvider.displayName="TableProvider",TableProvider.__docgenInfo={description:"",displayName:"TableProvider",props:{id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string | number"}},sortingEnabled:{defaultValue:null,description:"",name:"sortingEnabled",required:!1,type:{name:"boolean"}},selectedRows:{defaultValue:null,description:"",name:"selectedRows",required:!1,type:{name:"Set<any>"}},selectionEnabled:{defaultValue:null,description:"",name:"selectionEnabled",required:!1,type:{name:"boolean"}},isMultiSelectEnabled:{defaultValue:null,description:"",name:"isMultiSelectEnabled",required:!1,type:{name:"boolean"}},onSelectionChang:{defaultValue:null,description:"",name:"onSelectionChang",required:!1,type:{name:"(e: any, data: any) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Table/context/table.context.tsx#TableProvider"]={docgenInfo:TableProvider.__docgenInfo,name:"TableProvider",path:"src/components/Table/context/table.context.tsx#TableProvider"})}catch(__react_docgen_typescript_loader_error){}const defaultProps={selectedRows:new Set,sortingEnabled:!1,selectionEnabled:!1,isMultiSelectEnabled:!0,onSelectionChang:(event,data)=>{}};function table_Table(props){const{children,...restProps}=props;return(0,jsx_runtime.jsx)(TableProvider,{...restProps,children})}table_Table.displayName="Table",table_Table.defaultProps=defaultProps;try{table_Table.displayName="Table",table_Table.__docgenInfo={description:"",displayName:"Table",props:{id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string | number"}},sortingEnabled:{defaultValue:{value:"false"},description:"",name:"sortingEnabled",required:!1,type:{name:"boolean"}},selectedRows:{defaultValue:{value:"new Set()"},description:"",name:"selectedRows",required:!1,type:{name:"Set<any>"}},selectionEnabled:{defaultValue:{value:"false"},description:"",name:"selectionEnabled",required:!1,type:{name:"boolean"}},isMultiSelectEnabled:{defaultValue:{value:"true"},description:"",name:"isMultiSelectEnabled",required:!1,type:{name:"boolean"}},onSelectionChang:{defaultValue:{value:"(event: any, data: any) => {}"},description:"",name:"onSelectionChang",required:!1,type:{name:"(e: any, data: any) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Table/table.tsx#Table"]={docgenInfo:table_Table.__docgenInfo,name:"Table",path:"src/components/Table/table.tsx#Table"})}catch(__react_docgen_typescript_loader_error){}var injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),table=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./node_modules/sass-loader/dist/cjs.js!./src/components/Table/table.scss"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(table.Z,options);const Table_table=table.Z&&table.Z.locals?table.Z.locals:void 0;function tableHeader_TableHeader(props){return(0,jsx_runtime.jsx)("div",{className:Table_table.tableHeader,children:props.children})}tableHeader_TableHeader.displayName="TableHeader";try{tableHeader_TableHeader.displayName="TableHeader",tableHeader_TableHeader.__docgenInfo={description:"",displayName:"TableHeader",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Table/tableHeader.tsx#TableHeader"]={docgenInfo:tableHeader_TableHeader.__docgenInfo,name:"TableHeader",path:"src/components/Table/tableHeader.tsx#TableHeader"})}catch(__react_docgen_typescript_loader_error){}var styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js");const TableBodyContainer=styled_components_browser_esm.ZP.div`
  display: block;
  max-height: 490px;
  overflow: scroll;
  max-wdith: 100%;
  box-size: border-box;
`;function tableBody_TableBody(props){return(0,jsx_runtime.jsx)(TableBodyContainer,{children:props.children})}tableBody_TableBody.displayName="TableBody";try{tableBody_TableBody.displayName="TableBody",tableBody_TableBody.__docgenInfo={description:"",displayName:"TableBody",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Table/tableBody.tsx#TableBody"]={docgenInfo:tableBody_TableBody.__docgenInfo,name:"TableBody",path:"src/components/Table/tableBody.tsx#TableBody"})}catch(__react_docgen_typescript_loader_error){}const TableCellContainer=styled_components_browser_esm.ZP.div`
  display: flex;
  flex-basis: 0px;
  flex-grow: 1;
  flex-shrink: 1;
  align-items: center;
  min-height: 44px;
  box-sizing: border-box;
  padding: 0 8px;

  ${props=>{if(props.$checkBoxContainer)return"\n        max-width: 44px;\n        min-width: 44px;\n      "}}
`;function tableCell_TableCell(props){return(0,jsx_runtime.jsx)(TableCellContainer,{$checkBoxContainer:props.checkBoxContainer,children:props.children})}tableCell_TableCell.displayName="TableCell";try{tableCell_TableCell.displayName="TableCell",tableCell_TableCell.__docgenInfo={description:"",displayName:"TableCell",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Table/tableCell.tsx#TableCell"]={docgenInfo:tableCell_TableCell.__docgenInfo,name:"TableCell",path:"src/components/Table/tableCell.tsx#TableCell"})}catch(__react_docgen_typescript_loader_error){}const TableRowContainer=styled_components_browser_esm.ZP.div`
  ${props=>({...props.$style})}
  display: flex;
  align-items: center;
  border-bottom: 1px solid #ddd;
  border-collapse: collapse;
  box-sizing: border-box;
  cursor: pointer;
  height: 44px;

  &:hover {
    background-color: #f5f5f5;
  }

  ${props=>{if(props.$selectedRow)return"\n      background-color: #e4e9f2;\n      "}}
`;function tableRow_TableRow(props){const{id=(0,react.useId)(),children,style,onClick:handleCallBack=((event,data)=>{}),selected}=props;return(0,jsx_runtime.jsx)(TableRowContainer,{onClick:event=>{event.preventDefault(),handleCallBack(event,id)},$selectedRow:selected,$style:style,children})}tableRow_TableRow.displayName="TableRow",tableRow_TableRow.defaultProps={selected:!1,style:{}};try{tableRow_TableRow.displayName="TableRow",tableRow_TableRow.__docgenInfo={description:"",displayName:"TableRow",props:{id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"string | number"}},selected:{defaultValue:{value:"false"},description:"",name:"selected",required:!1,type:{name:"boolean"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"(event: any, data: any) => void"}},style:{defaultValue:{value:"{}"},description:"",name:"style",required:!1,type:{name:"any"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Table/tableRow.tsx#TableRow"]={docgenInfo:tableRow_TableRow.__docgenInfo,name:"TableRow",path:"src/components/Table/tableRow.tsx#TableRow"})}catch(__react_docgen_typescript_loader_error){}const TableHeaderCellContainer=styled_components_browser_esm.ZP.div`
  display: flex;
  flex-basis: 0px;
  flex-grow: 1;
  flex-shrink: 1;
  align-items: center;
  min-height: 32px;
  box-sizing: border-box;
  padding: 0 8px;
  border-right: 1px solid #ddd;

  ${props=>{if(props.$checkBoxContainer)return"\n        max-width: 44px;\n        min-width: 44px;\n      "}}
`;function tableHeaderCell_TableHeaderCell(props){const{onClick:handleClickCallBack=(()=>{})}=props,dispatch=(0,react.useContext)(TableDispatchContext);return(0,jsx_runtime.jsx)(TableHeaderCellContainer,{onClick:event=>{event.preventDefault(),dispatch({type:ActionTypes_TableHeaderSortingClick,pacyload:event}),handleClickCallBack(event)},children:props.children})}tableHeaderCell_TableHeaderCell.displayName="TableHeaderCell";try{tableHeaderCell_TableHeaderCell.displayName="TableHeaderCell",tableHeaderCell_TableHeaderCell.__docgenInfo={description:"",displayName:"TableHeaderCell",props:{onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"(event: any, data?: any) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Table/tableHeaderCell.tsx#TableHeaderCell"]={docgenInfo:tableHeaderCell_TableHeaderCell.__docgenInfo,name:"TableHeaderCell",path:"src/components/Table/tableHeaderCell.tsx#TableHeaderCell"})}catch(__react_docgen_typescript_loader_error){}const tableHeaderRow_TableRowContainer=styled_components_browser_esm.ZP.div`
  display: flex;
  align-items: center;
  border-bottom: 1px solid #ddd;
  border-collapse: collapse;
  box-sizing: border-box;
  cursor: pointer;

  &:hover {
    background-color: #f5f5f5;
  }
`;function tableHeaderRow_TableHeaderRow(props){const{children}=props;return(0,jsx_runtime.jsx)(tableHeaderRow_TableRowContainer,{children})}tableHeaderRow_TableHeaderRow.displayName="TableHeaderRow",tableHeaderRow_TableHeaderRow.defaultProps={};try{tableHeaderRow_TableHeaderRow.displayName="TableHeaderRow",tableHeaderRow_TableHeaderRow.__docgenInfo={description:"",displayName:"TableHeaderRow",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Table/tableHeaderRow.tsx#TableHeaderRow"]={docgenInfo:tableHeaderRow_TableHeaderRow.__docgenInfo,name:"TableHeaderRow",path:"src/components/Table/tableHeaderRow.tsx#TableHeaderRow"})}catch(__react_docgen_typescript_loader_error){}function tableSelectionCell_TableSelectionCell(props){const{id="",selected,onClick:handleClick}=props;return(0,jsx_runtime.jsx)(tableCell_TableCell,{checkBoxContainer:!0})}tableSelectionCell_TableSelectionCell.displayName="TableSelectionCell";try{tableSelectionCell_TableSelectionCell.displayName="TableSelectionCell",tableSelectionCell_TableSelectionCell.__docgenInfo={description:"",displayName:"TableSelectionCell",props:{id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"string | number"}},selected:{defaultValue:null,description:"",name:"selected",required:!0,type:{name:"boolean"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!0,type:{name:"(event: any, data: any) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Table/tableSelectionCell.tsx#TableSelectionCell"]={docgenInfo:tableSelectionCell_TableSelectionCell.__docgenInfo,name:"TableSelectionCell",path:"src/components/Table/tableSelectionCell.tsx#TableSelectionCell"})}catch(__react_docgen_typescript_loader_error){}try{Table.displayName="Table",Table.__docgenInfo={description:"",displayName:"Table",props:{id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string | number"}},sortingEnabled:{defaultValue:{value:"false"},description:"",name:"sortingEnabled",required:!1,type:{name:"boolean"}},selectedRows:{defaultValue:{value:"new Set()"},description:"",name:"selectedRows",required:!1,type:{name:"Set<any>"}},selectionEnabled:{defaultValue:{value:"false"},description:"",name:"selectionEnabled",required:!1,type:{name:"boolean"}},isMultiSelectEnabled:{defaultValue:{value:"true"},description:"",name:"isMultiSelectEnabled",required:!1,type:{name:"boolean"}},onSelectionChang:{defaultValue:{value:"(event: any, data: any) => {}"},description:"",name:"onSelectionChang",required:!1,type:{name:"(e: any, data: any) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Table/index.tsx#Table"]={docgenInfo:Table.__docgenInfo,name:"Table",path:"src/components/Table/index.tsx#Table"})}catch(__react_docgen_typescript_loader_error){}try{TableHeader.displayName="TableHeader",TableHeader.__docgenInfo={description:"",displayName:"TableHeader",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Table/index.tsx#TableHeader"]={docgenInfo:TableHeader.__docgenInfo,name:"TableHeader",path:"src/components/Table/index.tsx#TableHeader"})}catch(__react_docgen_typescript_loader_error){}try{TableBody.displayName="TableBody",TableBody.__docgenInfo={description:"",displayName:"TableBody",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Table/index.tsx#TableBody"]={docgenInfo:TableBody.__docgenInfo,name:"TableBody",path:"src/components/Table/index.tsx#TableBody"})}catch(__react_docgen_typescript_loader_error){}try{TableCell.displayName="TableCell",TableCell.__docgenInfo={description:"",displayName:"TableCell",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Table/index.tsx#TableCell"]={docgenInfo:TableCell.__docgenInfo,name:"TableCell",path:"src/components/Table/index.tsx#TableCell"})}catch(__react_docgen_typescript_loader_error){}try{TableRow.displayName="TableRow",TableRow.__docgenInfo={description:"",displayName:"TableRow",props:{id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"string | number"}},selected:{defaultValue:{value:"false"},description:"",name:"selected",required:!1,type:{name:"boolean"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"(event: any, data: any) => void"}},style:{defaultValue:{value:"{}"},description:"",name:"style",required:!1,type:{name:"any"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Table/index.tsx#TableRow"]={docgenInfo:TableRow.__docgenInfo,name:"TableRow",path:"src/components/Table/index.tsx#TableRow"})}catch(__react_docgen_typescript_loader_error){}try{TableHeaderCell.displayName="TableHeaderCell",TableHeaderCell.__docgenInfo={description:"",displayName:"TableHeaderCell",props:{onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"(event: any, data?: any) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Table/index.tsx#TableHeaderCell"]={docgenInfo:TableHeaderCell.__docgenInfo,name:"TableHeaderCell",path:"src/components/Table/index.tsx#TableHeaderCell"})}catch(__react_docgen_typescript_loader_error){}try{TableHeaderRow.displayName="TableHeaderRow",TableHeaderRow.__docgenInfo={description:"",displayName:"TableHeaderRow",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Table/index.tsx#TableHeaderRow"]={docgenInfo:TableHeaderRow.__docgenInfo,name:"TableHeaderRow",path:"src/components/Table/index.tsx#TableHeaderRow"})}catch(__react_docgen_typescript_loader_error){}try{TableSelectionCell.displayName="TableSelectionCell",TableSelectionCell.__docgenInfo={description:"",displayName:"TableSelectionCell",props:{id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"string | number"}},selected:{defaultValue:null,description:"",name:"selected",required:!0,type:{name:"boolean"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!0,type:{name:"(event: any, data: any) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Table/index.tsx#TableSelectionCell"]={docgenInfo:TableSelectionCell.__docgenInfo,name:"TableSelectionCell",path:"src/components/Table/index.tsx#TableSelectionCell"})}catch(__react_docgen_typescript_loader_error){}var dist_index_esm=__webpack_require__("./node_modules/react-window/dist/index.esm.js");const DataTableTwo_stories={title:"Components/Table",component:table_Table,tags:["autodocs"],decorators:[Story=>(0,jsx_runtime.jsx)("div",{style:{margin:"1em",padding:"2em",background:"#f8f7f7"},children:(0,jsx_runtime.jsx)(Story,{})})]},baseItems=[{file:{label:"Meeting notes",icon:(0,jsx_runtime.jsx)(index_esm.TxY,{})},author:{label:"Max Mustermann",status:"available"},lastUpdated:{label:"7h ago",timestamp:1},lastUpdate:{label:"You edited this",icon:(0,jsx_runtime.jsx)(index_esm.FNg,{})}},{file:{label:"Thursday presentation",icon:(0,jsx_runtime.jsx)(index_esm.qlM,{})},author:{label:"Erika Mustermann",status:"busy"},lastUpdated:{label:"Yesterday at 1:45 PM",timestamp:2},lastUpdate:{label:"You recently opened this",icon:(0,jsx_runtime.jsx)(index_esm.qlM,{})}},{file:{label:"Training recording",icon:(0,jsx_runtime.jsx)(index_esm.aXC,{})},author:{label:"John Doe",status:"away"},lastUpdated:{label:"Yesterday at 1:45 PM",timestamp:2},lastUpdate:{label:"You recently opened this",icon:(0,jsx_runtime.jsx)(index_esm.aXC,{})}},{file:{label:"Purchase order",icon:(0,jsx_runtime.jsx)(io5_index_esm.jyt,{})},author:{label:"Jane Doe",status:"offline"},lastUpdated:{label:"Tue at 9:30 AM",timestamp:3},lastUpdate:{label:"You shared this in a Teams chat",icon:(0,jsx_runtime.jsx)(io_index_esm.s6e,{})}}],items=[...baseItems],SpanIcon=styled_components_browser_esm.ZP.span`
  margin-right: 8px;
  font-size: 18px;
  display: flex;
  align-items: center;
`;function DataTableTwo_stories_tableReducer(state,_ref){let{type,payload}=_ref;if("UpdateRowSelection"===type){const{selectedRows}=state;return selectedRows.has(payload)?selectedRows.delete(payload):selectedRows.add(payload),{...state,selectedRows}}if("UpdateTableHeaderSelection"===type){let{items,isHeaderSelected,selectedRows}=state;return isHeaderSelected=!isHeaderSelected,isHeaderSelected?selectedRows=new Set([...items.map((_ref2=>{let{id}=_ref2;return id}))]):selectedRows.clear(),{...state,isHeaderSelected,selectedRows}}}const TableList=(_ref3=>{let{}=_ref3;const[state,dispatchState]=(0,react.useReducer)(DataTableTwo_stories_tableReducer,{items:[...items.map((data=>({...data,id:data.file.label})))],isHeaderSelected:!1,selectedRows:new Set}),handleRowClick=(event,id)=>{event.preventDefault(),console.log("Table row clicked",id),dispatchState({type:"UpdateRowSelection",payload:id})},handleRowCheckboxClick=(event,id)=>{event.preventDefault(),console.log("Table row clicked",id),dispatchState({type:"UpdateRowSelection",payload:id})};return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsxs)(table_Table,{"aria-label":"Table with multiselect",children:[(0,jsx_runtime.jsx)(tableHeader_TableHeader,{children:(0,jsx_runtime.jsxs)(tableRow_TableRow,{children:[(0,jsx_runtime.jsx)(tableSelectionCell_TableSelectionCell,{id:"headerSelection",selected:state.isHeaderSelected,onClick:event=>{event.preventDefault(),console.log("Header selection clicked"),dispatchState({type:"UpdateTableHeaderSelection",payload:""})}}),(0,jsx_runtime.jsx)(tableHeaderCell_TableHeaderCell,{children:"File"}),(0,jsx_runtime.jsx)(tableHeaderCell_TableHeaderCell,{children:"Author"}),(0,jsx_runtime.jsx)(tableHeaderCell_TableHeaderCell,{children:"Last updated"}),(0,jsx_runtime.jsx)(tableHeaderCell_TableHeaderCell,{children:"Last update"})]})}),(0,jsx_runtime.jsx)(tableBody_TableBody,{children:state.items.map((item=>(0,jsx_runtime.jsxs)(tableRow_TableRow,{onClick:handleRowClick,children:[(0,jsx_runtime.jsx)(tableSelectionCell_TableSelectionCell,{id:item.id,selected:state.selectedRows.has(item.id),onClick:handleRowCheckboxClick}),(0,jsx_runtime.jsxs)(tableCell_TableCell,{children:[item.file.icon&&(0,jsx_runtime.jsx)(SpanIcon,{children:item.file.icon}),item.file.label]}),(0,jsx_runtime.jsxs)(tableCell_TableCell,{children:[(0,jsx_runtime.jsx)(SpanIcon,{children:(0,jsx_runtime.jsx)(cg_index_esm.Mdg,{})}),item.author.label]}),(0,jsx_runtime.jsx)(tableCell_TableCell,{children:item.lastUpdated.label}),(0,jsx_runtime.jsxs)(tableCell_TableCell,{children:[item.lastUpdate.icon&&(0,jsx_runtime.jsx)(SpanIcon,{children:item.lastUpdate.icon}),item.lastUpdate.label]})]},item.file.label)))})]})})}).bind({});TableList.parameters={docs:{source:{code:'\nimport React, { useReducer } from "react";\nimport { CiEdit, CiFileOn, CiFolderOn, CiVideoOn } from \'react-icons/ci\';\nimport { IoMdPeople } from \'react-icons/io\';\nimport { IoDocumentTextOutline } from \'react-icons/io5\';\nimport { CgProfile } from "react-icons/cg";\nimport { FixedSizeList as List } from "react-window";\n\nimport {\n  Table,\n  TableHeader,\n  TableSelectionCell,\n  TableRow,\n  TableHeaderCell,\n  TableBody,\n  TableCell\n} from "./components/Table";\nimport styled from "styled-components";\n\nconst baseItems = [\n  {\n    file: { label: "Meeting notes", icon: <CiFileOn /> },\n    author: { label: "Max Mustermann", status: "available" },\n    lastUpdated: { label: "7h ago", timestamp: 1 },\n    lastUpdate: {\n      label: "You edited this",\n      icon: <CiEdit />\n    },\n  },\n  {\n    file: { label: "Thursday presentation", icon: <CiFolderOn /> },\n    author: { label: "Erika Mustermann", status: "busy" },\n    lastUpdated: { label: "Yesterday at 1:45 PM", timestamp: 2 },\n    lastUpdate: {\n      label: "You recently opened this",\n      icon: <CiFolderOn />\n    },\n  },\n  {\n    file: { label: "Training recording", icon: <CiVideoOn /> },\n    author: { label: "John Doe", status: "away" },\n    lastUpdated: { label: "Yesterday at 1:45 PM", timestamp: 2 },\n    lastUpdate: {\n      label: "You recently opened this",\n      icon: <CiVideoOn />\n    },\n  },\n  {\n    file: { label: "Purchase order", icon: <IoDocumentTextOutline /> },\n    author: { label: "Jane Doe", status: "offline" },\n    lastUpdated: { label: "Tue at 9:30 AM", timestamp: 3 },\n    lastUpdate: {\n      label: "You shared this in a Teams chat",\n      icon: <IoMdPeople />\n    },\n  },\n];\n\nconst items = [...baseItems];\n\nconst SpanIcon = styled.span`\n  margin-right: 8px;\n  font-size: 18px;\n  display: flex;\n  align-items: center;\n`\n\nfunction tableReducer(state, {type, payload}) {\n  if (type === "UpdateRowSelection") {\n    const {selectedRows} = state;\n    if (selectedRows.has(payload)) {\n      selectedRows.delete(payload);\n    } else {\n      selectedRows.add(payload);\n    }\n    return {...state, selectedRows}\n  }\n\n  if (type === "UpdateTableHeaderSelection") {\n    let {items, isHeaderSelected, selectedRows} = state;\n    isHeaderSelected = !isHeaderSelected;\n    if (isHeaderSelected) {\n      selectedRows = new Set([...items.map(({id}) => id)]);\n    } else {\n      selectedRows.clear();\n    }\n    return {...state, isHeaderSelected, selectedRows}\n  }\n}\n\nconst DataTable = ({}) => {\n  const [state, dispatchState] = useReducer(tableReducer, {\n    items: [...items.map((data) => {\n      return {\n        ...data,\n        id: data.file.label\n      }\n    })],\n    isHeaderSelected: false,\n    selectedRows: new Set(),\n  });\n\n  const toggleAllRows = (event) => {\n    event.preventDefault();\n    console.log("Header selection clicked");\n    dispatchState({\n      type: "UpdateTableHeaderSelection",\n      payload: \'\'\n    })\n  }\n\n  const handleRowClick = (event, id) => {\n    event.preventDefault();\n    console.log("Table row clicked", id);\n    dispatchState({\n      type: "UpdateRowSelection",\n      payload: id\n    })\n  }\n\n  const handleRowCheckboxClick = (event, id) => {\n    event.preventDefault();\n    console.log("Table row clicked", id);\n    dispatchState({\n      type: "UpdateRowSelection",\n      payload: id\n    })\n  }\n  \n  return (\n    <>\n      <h1>Hello React</h1>\n      <Table aria-label="Table with multiselect">\n        <TableHeader>\n          <TableRow>\n            <TableSelectionCell\n              id="headerSelection"\n              selected={state.isHeaderSelected}\n              onClick={toggleAllRows}\n            />\n\n            <TableHeaderCell>File</TableHeaderCell>\n            <TableHeaderCell>Author</TableHeaderCell>\n            <TableHeaderCell>Last updated</TableHeaderCell>\n            <TableHeaderCell>Last update</TableHeaderCell>\n          </TableRow>\n        </TableHeader>\n        <TableBody>\n          {state.items.map((item) => (\n            <TableRow\n              key={item.file.label}\n              onClick={handleRowClick}\n            >\n              <TableSelectionCell\n                id={item.id}\n                selected={state.selectedRows.has(item.id)}\n                onClick={handleRowCheckboxClick}\n              />\n              <TableCell>\n                {item.file.icon && <SpanIcon>{item.file.icon}</SpanIcon>}\n                {item.file.label}\n              </TableCell>\n              <TableCell>\n                <SpanIcon><CgProfile /></SpanIcon>\n                {item.author.label}\n              </TableCell>\n              <TableCell>{item.lastUpdated.label}</TableCell>\n              <TableCell>\n                {item.lastUpdate.icon && <SpanIcon>{item.lastUpdate.icon}</SpanIcon>}\n                {item.lastUpdate.label}\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </>\n  );\n}\n'}}};const items2=new Array(1500).fill(0).map(((_,i)=>{let{file,...res}=baseItems[i%baseItems.length],{label}=file;return label=`[${i}] ${label}`,file={...file,label},{file,...res,index:i}})),InfiniteLoadTableList=(_ref4=>{let{}=_ref4;const[state,dispatchState]=(0,react.useReducer)(DataTableTwo_stories_tableReducer,{items:[...items2.map((data=>({...data,id:data.file.label})))],isHeaderSelected:!1,selectedRows:new Set}),handleRowClick=(event,id)=>{event.preventDefault(),console.log("Table row clicked",id),dispatchState({type:"UpdateRowSelection",payload:id})},handleRowCheckboxClick=(event,id)=>{event.preventDefault(),console.log("Table row clicked",id),dispatchState({type:"UpdateRowSelection",payload:id})};return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsxs)(table_Table,{"aria-label":"Table with multiselect",children:[(0,jsx_runtime.jsx)(tableHeader_TableHeader,{children:(0,jsx_runtime.jsxs)(tableRow_TableRow,{children:[(0,jsx_runtime.jsx)(tableSelectionCell_TableSelectionCell,{id:"headerSelection",selected:state.isHeaderSelected,onClick:event=>{event.preventDefault(),console.log("Header selection clicked"),dispatchState({type:"UpdateTableHeaderSelection",payload:""})}}),(0,jsx_runtime.jsx)(tableHeaderCell_TableHeaderCell,{children:"File"}),(0,jsx_runtime.jsx)(tableHeaderCell_TableHeaderCell,{children:"Author"}),(0,jsx_runtime.jsx)(tableHeaderCell_TableHeaderCell,{children:"Last updated"}),(0,jsx_runtime.jsx)(tableHeaderCell_TableHeaderCell,{children:"Last update"})]})}),(0,jsx_runtime.jsx)(tableBody_TableBody,{children:(0,jsx_runtime.jsx)(dist_index_esm.t7,{height:310,width:"100%",itemCount:state?.items?.length,itemSize:44,children:_ref5=>{let{index,style}=_ref5;const item=state.items[index];return(0,jsx_runtime.jsxs)(tableRow_TableRow,{onClick:handleRowClick,style,children:[(0,jsx_runtime.jsx)(tableSelectionCell_TableSelectionCell,{id:item.id,selected:state.selectedRows.has(item.id),onClick:handleRowCheckboxClick}),(0,jsx_runtime.jsxs)(tableCell_TableCell,{children:[item.file.icon&&(0,jsx_runtime.jsx)(SpanIcon,{children:item.file.icon}),item.file.label]}),(0,jsx_runtime.jsxs)(tableCell_TableCell,{children:[(0,jsx_runtime.jsx)(SpanIcon,{children:(0,jsx_runtime.jsx)(cg_index_esm.Mdg,{})}),item.author.label]}),(0,jsx_runtime.jsx)(tableCell_TableCell,{children:item.lastUpdated.label}),(0,jsx_runtime.jsxs)(tableCell_TableCell,{children:[item.lastUpdate.icon&&(0,jsx_runtime.jsx)(SpanIcon,{children:item.lastUpdate.icon}),item.lastUpdate.label]})]},item.file.label)}})})]})})}).bind({});InfiniteLoadTableList.parameters={docs:{source:{code:'\nimport React, { useReducer } from "react";\nimport { CiEdit, CiFileOn, CiFolderOn, CiVideoOn } from \'react-icons/ci\';\nimport { IoMdPeople } from \'react-icons/io\';\nimport { IoDocumentTextOutline } from \'react-icons/io5\';\nimport { CgProfile } from "react-icons/cg";\nimport { FixedSizeList as List } from "react-window";\n\nimport {\n  Table,\n  TableHeader,\n  TableSelectionCell,\n  TableRow,\n  TableHeaderCell,\n  TableBody,\n  TableCell\n} from "./components/Table";\nimport styled from "styled-components";\n\nconst baseItems = [\n  {\n    file: { label: "Meeting notes", icon: <CiFileOn /> },\n    author: { label: "Max Mustermann", status: "available" },\n    lastUpdated: { label: "7h ago", timestamp: 1 },\n    lastUpdate: {\n      label: "You edited this",\n      icon: <CiEdit />\n    },\n  },\n  {\n    file: { label: "Thursday presentation", icon: <CiFolderOn /> },\n    author: { label: "Erika Mustermann", status: "busy" },\n    lastUpdated: { label: "Yesterday at 1:45 PM", timestamp: 2 },\n    lastUpdate: {\n      label: "You recently opened this",\n      icon: <CiFolderOn />\n    },\n  },\n  {\n    file: { label: "Training recording", icon: <CiVideoOn /> },\n    author: { label: "John Doe", status: "away" },\n    lastUpdated: { label: "Yesterday at 1:45 PM", timestamp: 2 },\n    lastUpdate: {\n      label: "You recently opened this",\n      icon: <CiVideoOn />\n    },\n  },\n  {\n    file: { label: "Purchase order", icon: <IoDocumentTextOutline /> },\n    author: { label: "Jane Doe", status: "offline" },\n    lastUpdated: { label: "Tue at 9:30 AM", timestamp: 3 },\n    lastUpdate: {\n      label: "You shared this in a Teams chat",\n      icon: <IoMdPeople />\n    },\n  },\n];\n\nconst items2 = new Array(1500).fill(0).map(((_, i) => {\n  let { file, ...res } = baseItems[i % baseItems.length];\n  let { label } = file;\n  label = `[${i}] ${label}`\n  file = { ...file, label };\n  return ({\n    file,\n    ...res,\n    index: i\n  })\n}))\n\nconst SpanIcon = styled.span`\n  margin-right: 8px;\n  font-size: 18px;\n  display: flex;\n  align-items: center;\n`\n\nfunction tableReducer(state, {type, payload}) {\n  if (type === "UpdateRowSelection") {\n    const {selectedRows} = state;\n    if (selectedRows.has(payload)) {\n      selectedRows.delete(payload);\n    } else {\n      selectedRows.add(payload);\n    }\n    return {...state, selectedRows}\n  }\n\n  if (type === "UpdateTableHeaderSelection") {\n    let {items, isHeaderSelected, selectedRows} = state;\n    isHeaderSelected = !isHeaderSelected;\n    if (isHeaderSelected) {\n      selectedRows = new Set([...items.map(({id}) => id)]);\n    } else {\n      selectedRows.clear();\n    }\n    return {...state, isHeaderSelected, selectedRows}\n  }\n}\n\nconst DataTable = ({}) => {\n  const [state, dispatchState] = useReducer(tableReducer, {\n    items: [...items.map((data) => {\n      return {\n        ...data,\n        id: data.file.label\n      }\n    })],\n    isHeaderSelected: false,\n    selectedRows: new Set(),\n  });\n\n  const toggleAllRows = (event) => {\n    event.preventDefault();\n    console.log("Header selection clicked");\n    dispatchState({\n      type: "UpdateTableHeaderSelection",\n      payload: \'\'\n    })\n  }\n\n  const handleRowClick = (event, id) => {\n    event.preventDefault();\n    console.log("Table row clicked", id);\n    dispatchState({\n      type: "UpdateRowSelection",\n      payload: id\n    })\n  }\n\n  const handleRowCheckboxClick = (event, id) => {\n    event.preventDefault();\n    console.log("Table row clicked", id);\n    dispatchState({\n      type: "UpdateRowSelection",\n      payload: id\n    })\n  }\n  \n  return (\n    <Table aria-label="Table with multiselect">\n      <TableHeader>\n        <TableRow>\n          <TableSelectionCell\n            id="headerSelection"\n            selected={state.isHeaderSelected}\n            onClick={toggleAllRows}\n          />\n\n          <TableHeaderCell>File</TableHeaderCell>\n          <TableHeaderCell>Author</TableHeaderCell>\n          <TableHeaderCell>Last updated</TableHeaderCell>\n          <TableHeaderCell>Last update</TableHeaderCell>\n        </TableRow>\n      </TableHeader>\n      <TableBody>\n        <List\n          height={310}\n          width={"100%"}\n          itemCount={state?.items?.length}\n          itemSize={44}\n        >\n          {({ index, style }) => {\n            const item = state.items[index];\n            return (\n              <TableRow\n                key={item.file.label}\n                onClick={handleRowClick}\n                style={style}\n              >\n                <TableSelectionCell\n                  id={item.id}\n                  selected={state.selectedRows.has(item.id)}\n                  onClick={handleRowCheckboxClick}\n                />\n                <TableCell>\n                  {item.file.icon && <SpanIcon>{item.file.icon}</SpanIcon>}\n                  {item.file.label}\n                </TableCell>\n                <TableCell>\n                  <SpanIcon><CgProfile /></SpanIcon>\n                  {item.author.label}\n                </TableCell>\n                <TableCell>{item.lastUpdated.label}</TableCell>\n                <TableCell>\n                  {item.lastUpdate.icon && <SpanIcon>{item.lastUpdate.icon}</SpanIcon>}\n                  {item.lastUpdate.label}\n                </TableCell>\n              </TableRow>\n            )}\n          }\n        </List>\n      </TableBody>\n    </Table>\n  );\n}\n'}}},TableList.parameters={...TableList.parameters,docs:{...TableList.parameters?.docs,source:{originalSource:'({}) => {\n  const [state, dispatchState] = useReducer(tableReducer, {\n    items: [...items.map(data => {\n      return {\n        ...data,\n        id: data.file.label\n      };\n    })],\n    isHeaderSelected: false,\n    selectedRows: new Set()\n  });\n  const toggleAllRows = event => {\n    event.preventDefault();\n    console.log("Header selection clicked");\n    dispatchState({\n      type: "UpdateTableHeaderSelection",\n      payload: \'\'\n    });\n  };\n  const handleRowClick = (event, id) => {\n    event.preventDefault();\n    console.log("Table row clicked", id);\n    dispatchState({\n      type: "UpdateRowSelection",\n      payload: id\n    });\n  };\n  const handleRowCheckboxClick = (event, id) => {\n    event.preventDefault();\n    console.log("Table row clicked", id);\n    dispatchState({\n      type: "UpdateRowSelection",\n      payload: id\n    });\n  };\n  return <>\n      <Table aria-label="Table with multiselect">\n        <TableHeader>\n          <TableRow>\n            <TableSelectionCell id="headerSelection" selected={state.isHeaderSelected} onClick={toggleAllRows} />\n\n            <TableHeaderCell>File</TableHeaderCell>\n            <TableHeaderCell>Author</TableHeaderCell>\n            <TableHeaderCell>Last updated</TableHeaderCell>\n            <TableHeaderCell>Last update</TableHeaderCell>\n          </TableRow>\n        </TableHeader>\n        <TableBody>\n          {state.items.map(item => <TableRow key={item.file.label} onClick={handleRowClick}>\n              <TableSelectionCell id={item.id} selected={state.selectedRows.has(item.id)} onClick={handleRowCheckboxClick} />\n              <TableCell>\n                {item.file.icon && <SpanIcon>{item.file.icon}</SpanIcon>}\n                {item.file.label}\n              </TableCell>\n              <TableCell>\n                <SpanIcon><CgProfile /></SpanIcon>\n                {item.author.label}\n              </TableCell>\n              <TableCell>{item.lastUpdated.label}</TableCell>\n              <TableCell>\n                {item.lastUpdate.icon && <SpanIcon>{item.lastUpdate.icon}</SpanIcon>}\n                {item.lastUpdate.label}\n              </TableCell>\n            </TableRow>)}\n        </TableBody>\n      </Table>\n    </>;\n}',...TableList.parameters?.docs?.source}}},InfiniteLoadTableList.parameters={...InfiniteLoadTableList.parameters,docs:{...InfiniteLoadTableList.parameters?.docs,source:{originalSource:'({}) => {\n  const [state, dispatchState] = useReducer(tableReducer, {\n    items: [...items2.map(data => {\n      return {\n        ...data,\n        id: data.file.label\n      };\n    })],\n    isHeaderSelected: false,\n    selectedRows: new Set()\n  });\n  const toggleAllRows = event => {\n    event.preventDefault();\n    console.log("Header selection clicked");\n    dispatchState({\n      type: "UpdateTableHeaderSelection",\n      payload: \'\'\n    });\n  };\n  const handleRowClick = (event, id) => {\n    event.preventDefault();\n    console.log("Table row clicked", id);\n    dispatchState({\n      type: "UpdateRowSelection",\n      payload: id\n    });\n  };\n  const handleRowCheckboxClick = (event, id) => {\n    event.preventDefault();\n    console.log("Table row clicked", id);\n    dispatchState({\n      type: "UpdateRowSelection",\n      payload: id\n    });\n  };\n  return <>\n      <Table aria-label="Table with multiselect">\n        <TableHeader>\n          <TableRow>\n            <TableSelectionCell id="headerSelection" selected={state.isHeaderSelected} onClick={toggleAllRows} />\n\n            <TableHeaderCell>File</TableHeaderCell>\n            <TableHeaderCell>Author</TableHeaderCell>\n            <TableHeaderCell>Last updated</TableHeaderCell>\n            <TableHeaderCell>Last update</TableHeaderCell>\n          </TableRow>\n        </TableHeader>\n        <TableBody>\n          <List height={310} width={"100%"} itemCount={state?.items?.length} itemSize={44}>\n            {({\n            index,\n            style\n          }) => {\n            const item = state.items[index];\n            return <TableRow key={item.file.label} onClick={handleRowClick} style={style}>\n                  <TableSelectionCell id={item.id} selected={state.selectedRows.has(item.id)} onClick={handleRowCheckboxClick} />\n                  <TableCell>\n                    {item.file.icon && <SpanIcon>{item.file.icon}</SpanIcon>}\n                    {item.file.label}\n                  </TableCell>\n                  <TableCell>\n                    <SpanIcon><CgProfile /></SpanIcon>\n                    {item.author.label}\n                  </TableCell>\n                  <TableCell>{item.lastUpdated.label}</TableCell>\n                  <TableCell>\n                    {item.lastUpdate.icon && <SpanIcon>{item.lastUpdate.icon}</SpanIcon>}\n                    {item.lastUpdate.label}\n                  </TableCell>\n                </TableRow>;\n          }}\n          </List>\n        </TableBody>\n      </Table>\n    </>;\n}',...InfiniteLoadTableList.parameters?.docs?.source}}};const __namedExportsOrder=["TableList","InfiniteLoadTableList"]},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./node_modules/sass-loader/dist/cjs.js!./src/components/Table/table.scss":(module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/sourceMaps.js"),_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,".table__tableContaine--N0VLo{display:block}.table__tableContaine--N0VLo .table__tableHeader--hfwBf,.table__tableContaine--N0VLo .table__tableBodyContainer--scBXt{display:block}","",{version:3,sources:["webpack://./src/components/Table/table.scss"],names:[],mappings:"AAAA,6BACE,aAAA,CAEA,uHACE,aAAA",sourcesContent:[".tableContaine {\n  display: block;\n\n  .tableHeader, .tableBodyContainer {\n    display: block;\n  }\n}"],sourceRoot:""}]),___CSS_LOADER_EXPORT___.locals={tableContaine:"table__tableContaine--N0VLo",tableHeader:"table__tableHeader--hfwBf",tableBodyContainer:"table__tableBodyContainer--scBXt"};const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___}}]);
//# sourceMappingURL=stories-DataTableTwo-stories.c469f0f6.iframe.bundle.js.map